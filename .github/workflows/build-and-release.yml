name: "Build and Release"

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3.4.1
        with:
          node-version: 20.x
          cache: "npm"
          
      - name: Install dependencies
        run: npm install
        
      - name: Create environment files
        run: |
          echo "NODE_ENV=production" > .env.production
          echo "PLASMO_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.CLERK_PUBLISHABLE_KEY }}" >> .env.production
          echo "CLERK_FRONTEND_API=${{ secrets.CLERK_FRONTEND_API }}" >> .env.production
          echo "PLASMO_PUBLIC_API_URL=${{ secrets.API_URL }}" >> .env.production
          echo "PLASMO_PUBLIC_CLERK_SYNC_HOST=${{ secrets.CLERK_SYNC_HOST }}" >> .env.production
          echo "CRX_PUBLIC_KEY=${{ secrets.CRX_PUBLIC_KEY }}" > .env.chrome
          echo "CRX_ID=${{ secrets.CRX_ID }}" >> .env.chrome
        
      - name: Build extension
        run: |
          export NODE_OPTIONS=--max_old_space_size=4096
          npm run build
        
      - name: Package extension
        run: npm run package
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: extension-builds
          path: |
            build/chrome-mv3-prod.zip
            build/firefox-mv2-prod.zip
            build/brave-mv3-prod.zip
            build/edge-mv3-prod.zip
            build/opera-mv3-prod.zip
          if-no-files-found: warn

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: extension-builds
          path: build
          
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release v${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          files: |
            build/chrome-mv3-prod.zip
            build/firefox-mv2-prod.zip
            build/brave-mv3-prod.zip
            build/edge-mv3-prod.zip
            build/opera-mv3-prod.zip
          body: |
            See [CHANGELOG.md](https://github.com/Allyson-AI/chrome-extension/blob/main/CHANGELOG.md) for details.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  submit:
    needs: build
    if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: extension-builds
          path: build
          
      - name: Browser Platform Publish
        uses: PlasmoHQ/bpp@v3
        with:
          keys: ${{ secrets.SUBMIT_KEYS }}
          artifact: build/chrome-mv3-prod.zip 